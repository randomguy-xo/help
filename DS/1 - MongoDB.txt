1. MongoDB Create database

> use database_name
> db
> show dbs
> db.user.insert({name: "Chaitanya", age: 30})
> show dbs

2. MongoDB Drop Database

> show dbs
> use database_name
> db.dropDatabase()
> show dbs

3. MongoDB Create collection

Method 1
> use database_name
> db.collection_name.insert({key:value, key:valueâ€¦})
>  db.collection_name.find() - shows all the documents
> show collections
Method 2 - capped collection
> db.createCollection("students11")
> db.createCollection("teachers", { capped : true, size : 9232768} ) 
> show collections

4. MongoDB Drop collection

> use database_name
> show collections
> db.collection_name.drop()

5. MongoDB Insert Document

> db.collection_name.insert({
... name: "  ",
... age:   ,
... email: "   ",
... }
)


6. MongoDB Query Document

>db.students.find()
> db.students.find()..pretty()
> db.students.find({StudentName : "Steve"}).pretty() - equality criteria
> db.collection_name.find({"field_name":{$gt:criteria_value}}).pretty() - greater criteria
> db.collection_name.find({"field_name":{$lt:criteria_value}}).pretty() - less criteria
> db.collection_name.find({"field_name":{$ne:criteria_value}}).pretty() - not equal 

7. MongoDB Update Document

> use database_name
> show collections
> db.createCollection("got")
> db.collection_name.update(criteria, update_data)
> db.got.update({"name":"Jon Snow"},{$set:{"name":"Kit Harington"}})
> db.got.find().pretty()

8. Delete document in MongoDB

> db.students.find().pretty()
> db.students.remove({"StudentId": 3333})
> db.students.find().pretty()
> db.collection_name.remove({}) - remove all document

9. MongoDB Projection

> db.collection_name.find({},{field_key:1 or 0})
> db.students.find({}, {"_id": 0, "StudentName" : 0, "age" : 0})

10. limit() and skip() method in MongoDB

> db.collection_name.find().limit(number_of_documents)
> db.studentdata.find({student_id : {$gt:2002}}).pretty()
> db.studentdata.find({student_id : {$gt:2002}}).limit(1).pretty()

> db.studentdata.find({student_id : {$gt:2002}}).limit(1).skip(1).pretty()

11. Sorting of Documents in MongoDB

> db.collecttion_name.find().sort({field_key:1 or -1})
> db.studentdata.find({}, {"student_id": 1, _id:0}).sort({"student_id": -1}) - descending order
> db.studentdata.find({}, {"student_id": 1, _id:0}).sort({"student_id": 1}) - ascending order
> db.studentdata.find({}, {"student_id": 1, _id:0}).sort({})

12. MongoDB Indexing

> db.collection_name.createIndex({field_name: 1 or -1})
> db.collection_name.getIndexes()
> db.collection_name.dropIndex({index_name: 1})
> db.collection_name.dropIndexes()